// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SCAWeb.Service.Monitoramento.Data;

namespace SCAWeb.Service.Monitoramento.Migrations
{
    [DbContext(typeof(MonitoramentoContext))]
    partial class MonitoramentoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SCAWeb.Service.Monitoramento.Entities.AlertaSensorEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("data_atualizacao")
                        .HasColumnType("datetime");

                    b.Property<string>("descricao_alerta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("id_sensor")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("tipo_aletra")
                        .HasColumnType("int");

                    b.Property<string>("user")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Alertas");
                });

            modelBuilder.Entity("SCAWeb.Service.Monitoramento.Entities.AreaEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("data_atualizacao")
                        .HasColumnType("datetime");

                    b.Property<string>("nome_barragem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("user")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Areas");
                });

            modelBuilder.Entity("SCAWeb.Service.Monitoramento.Entities.SensorEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("data_atualizacao")
                        .HasColumnType("datetime");

                    b.Property<Guid>("id_area")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("nome_sensor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("status_sensor")
                        .HasColumnType("int");

                    b.Property<string>("user")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sensores");
                });
#pragma warning restore 612, 618
        }
    }
}
